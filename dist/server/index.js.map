{"version":3,"file":"index.js","sources":["../../admin/src/pluginId.ts","../../server/src/bootstrap.ts","../../server/src/destroy.ts","../../server/src/register.ts","../../server/src/config/index.ts","../../server/content-types/strapi-5-sitemap-plugin-content-type/index.ts","../../server/content-types/strapi-5-sitemap-plugin-content-type-single-url/index.ts","../../server/content-types/strapi-5-sitemap-plugin-option/index.ts","../../server/src/content-types/index.ts","../../server/src/controllers/controller.ts","../../server/src/controllers/index.ts","../../server/src/middlewares/index.ts","../../server/src/policies/index.ts","../../server/src/routes/frontend.ts","../../server/src/routes/admin.ts","../../server/src/routes/index.ts","../../server/src/services/service.ts","../../server/src/services/index.ts","../../server/src/index.ts"],"sourcesContent":["export const PLUGIN_ID = 'strapi-5-sitemap-plugin';\n","import type { Core } from '@strapi/strapi';\nimport {PLUGIN_ID} from \"../../admin/src/pluginId\";\n\nconst bootstrap = async ({ strapi }: { strapi: Core.Strapi }) => {\n\tconst actions = [\n\t\t{\n\t\t\tsection: 'plugins',\n\t\t\tdisplayName: 'Access the plugin settings',\n\t\t\tuid: 'settings.read',\n\t\t\tpluginName: PLUGIN_ID,\n\t\t},\n\t\t{\n\t\t\tsection: 'plugins',\n\t\t\tdisplayName: 'Menu link to plugin settings',\n\t\t\tuid: 'menu-link',\n\t\t\tpluginName: PLUGIN_ID,\n\t\t},\n\t];\n\tawait strapi.admin.services.permission.actionProvider.registerMany(actions);\n};\n\nexport default bootstrap;\n","import type { Core } from '@strapi/strapi';\n\nconst destroy = ({ strapi }: { strapi: Core.Strapi }) => {\n  // destroy phase\n};\n\nexport default destroy;\n","import type { Core } from '@strapi/strapi';\n\nconst register = ({ strapi }: { strapi: Core.Strapi }) => {\n  // register phase\n};\n\nexport default register;\n","export default {\n  default: {},\n  validator() {},\n};\n","// @ts-ignore\nimport schema from './schema';\n\nconst contentType = {\n\tschema,\n};\n\nexport default contentType;\n","// @ts-ignore\nimport schema from './schema';\n\nconst contentTypeSingle = {\n\tschema,\n};\n\nexport default contentTypeSingle;\n","// @ts-ignore\nimport schema from './schema';\n\nconst options = {\n\tschema,\n};\n\nexport default options;\n","import contentType from '../../content-types/strapi-5-sitemap-plugin-content-type';\nimport contentTypeSingle from \"../../content-types/strapi-5-sitemap-plugin-content-type-single-url\";\nimport options from \"../../content-types/strapi-5-sitemap-plugin-option\";\n\nexport default {\n\t'strapi-5-sitemap-plugin-content-type': contentType,\n\t'strapi-5-sitemap-plugin-content-type-single-url': contentTypeSingle,\n\t'strapi-5-sitemap-plugin-option': options,\n};\n","import type {Core} from '@strapi/strapi';\n\nconst controller = ({strapi}: { strapi: Core.Strapi }) => ({\n\tgetSitemap: async (ctx)=> {\n\t\tconst sitemap = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.getSitemap();\n\n\t\tctx.set('Content-Type', 'application/xml');\n\t\tctx.body = sitemap;\n\t},\n\tadminGET: async (ctx) => {\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.getAdminData();\n\t},\n\tadminPOST(ctx) {\n\t\tconst requestData = ctx.request.body;\n\n\t\tctx.body = strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.saveAdminData(requestData);\n\t},\n\tadminPUT(ctx) {\n\t\tconst requestData = ctx.request.body;\n\n\t\tctx.body = strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.updateAdminData(requestData);\n\t},\n\tadminDELETE(ctx) {\n\t\tctx.body = strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.deleteAdminData(ctx.query.id);\n\t},\n\tadminGETContentTypes: async (ctx)=>  {\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.getContentTypes();\n\t},\n\tadminGETLocales: async (ctx) => {\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.getLocales();\n\t},\n\tadminAllowedFields: async (ctx) => {\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.getAllowedFields(ctx.query.type);\n\t},\n\tadminPutOptions: async (ctx) => {\n\t\tconst requestData = ctx.request.body;\n\n\t\tctx.body = strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.updateOptions(requestData);\n\t},\n\tadminGetOptions: async (ctx) => {\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.getOptions();\n\t},\n\tadminGetCustomURLs: async (ctx) => {\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.getCustomURLs();\n\t},\n\tadminPostCustomURLs: async (ctx) => {\n\t\tconst requestData = ctx.request.body;\n\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.postCustomURLs(requestData);\n\t},\n\tadminPutCustomURLs: async (ctx) => {\n\t\tconst requestData = ctx.request.body;\n\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.putCustomURLs(requestData);\n\t},\n\tadminDeleteCustomURLs: async (ctx) => {\n\t\tctx.body = await strapi\n\t\t\t.plugin('strapi-5-sitemap-plugin')\n\t\t\t.service('service')\n\t\t\t.deleteCustomURLs(ctx.query.id);\n\t},\n});\n\nexport default controller;\n","import controller from './controller';\n\nexport default {\n  controller,\n};\n","export default {};\n","export default {};\n","export default [\n\t{\n\t\tmethod: \"GET\",\n\t\tpath: \"/sitemap.xml\",\n\t\thandler: \"controller.getSitemap\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n];\n","export default [\n\t{\n\t\tmethod: \"GET\",\n\t\tpath: \"/admin\",\n\t\thandler: \"controller.adminGET\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"POST\",\n\t\tpath: \"/admin\",\n\t\thandler: \"controller.adminPOST\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"PUT\",\n\t\tpath: \"/admin\",\n\t\thandler: \"controller.adminPUT\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"DELETE\",\n\t\tpath: \"/admin\",\n\t\thandler: \"controller.adminDELETE\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"GET\",\n\t\tpath: \"/admin-get-content-types\",\n\t\thandler: \"controller.adminGETContentTypes\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"GET\",\n\t\tpath: \"/admin-get-locales\",\n\t\thandler: \"controller.adminGETLocales\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"GET\",\n\t\tpath: \"/admin-allowed-fields\",\n\t\thandler: \"controller.adminAllowedFields\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"GET\",\n\t\tpath: \"/admin-get-options\",\n\t\thandler: \"controller.adminGetOptions\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"PUT\",\n\t\tpath: \"/admin-put-options\",\n\t\thandler: \"controller.adminPutOptions\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"GET\",\n\t\tpath: \"/admin-custom-urls\",\n\t\thandler: \"controller.adminGetCustomURLs\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"POST\",\n\t\tpath: \"/admin-custom-urls\",\n\t\thandler: \"controller.adminPostCustomURLs\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"PUT\",\n\t\tpath: \"/admin-custom-urls\",\n\t\thandler: \"controller.adminPutCustomURLs\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n\t{\n\t\tmethod: \"DELETE\",\n\t\tpath: \"/admin-custom-urls\",\n\t\thandler: \"controller.adminDeleteCustomURLs\",\n\t\tconfig: {\n\t\t\tpolicies: [],\n\t\t},\n\t},\n];\n","'use strict';\n\nimport frontend from \"./frontend\";\nimport admin from \"./admin\";\n\nexport default {\n\tfrontend: {\n\t\ttype: 'content-api',\n\t\troutes: [...frontend],\n\t},\n\tadmin: {\n\t\ttype: 'admin',\n\t\troutes: [...admin],\n\t},\n};\n","import type {Core} from '@strapi/strapi';\n\nconst service = ({strapi}: { strapi: Core.Strapi }) => ({\n\tasync getSitemap() {\n\t\tconst sitemapEntries = await strapi.documents('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type').findMany();\n\t\tconst customURLs = await strapi.db.query('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type-single-url').findMany();\n\t\tconst baseURLObject = await strapi.documents('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-option').findFirst();\n\t\tconst baseURL = baseURLObject.baseUrl;\n\n\t\ttry {\n\t\t\tconst collections = [];\n\t\t\tconst sitemap = [];\n\n\t\t\tfor (const sitemapEntry of sitemapEntries) {\n\t\t\t\tconst populate = sitemapEntry.thumbnail ? { [sitemapEntry.thumbnail]: true } : undefined;\n\n\t\t\t\tconst entries = await strapi.documents(`api::${sitemapEntry.type}.${sitemapEntry.type}`).findMany({\n\t\t\t\t\tlocale: sitemapEntry.langcode === '-' ? undefined : sitemapEntry.langcode,\n\t\t\t\t\tstatus: 'published',\n\t\t\t\t\tpopulate\n\t\t\t\t});\n\n\t\t\t\tcollections.push({ ...sitemapEntry, entries });\n\t\t\t}\n\n\t\t\tcollections.forEach((collection) => {\n\t\t\t\tconst { pattern, priority, frequency, entries, lastModified, thumbnail } = collection;\n\t\t\t\touterloop: for (const entry of entries) {\n\t\t\t\t\tlet url = pattern;\n\n\t\t\t\t\tconst placeholders = pattern.match(/\\[([^\\]]+)\\]/g) || [];\n\t\t\t\t\tfor (const placeholder of placeholders) {\n\t\t\t\t\t\tconst key = placeholder.replace(/\\[|\\]/g, '');\n\t\t\t\t\t\tif (entry[key]) {\n\t\t\t\t\t\t\turl = url.replace(placeholder, entry[key]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak outerloop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\turl = baseURL + url;\n\n\t\t\t\t\tconst sitemapEntry = {\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tpriority,\n\t\t\t\t\t\tfrequency,\n\t\t\t\t\t\tlastmod: undefined,\n\t\t\t\t\t\tthumbnail: undefined,\n\t\t\t\t\t\tthumbnailTitle: undefined,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (lastModified === 'true') {\n\t\t\t\t\t\tsitemapEntry.lastmod = entry.updatedAt;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (thumbnail !== '') {\n\t\t\t\t\t\tconst media = Array.isArray(entry[thumbnail]) ? entry[thumbnail][0] : entry[thumbnail];\n\n\t\t\t\t\t\tif (media?.url) {\n\t\t\t\t\t\t\tsitemapEntry.thumbnail = media.url;\n\t\t\t\t\t\t\tsitemapEntry.thumbnailTitle = media.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsitemap.push(sitemapEntry);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst customSitemapEntries = customURLs.map((customURL) => ({\n\t\t\t\turl: `${baseURL}${customURL.slug}`,\n\t\t\t\tpriority: customURL.priority,\n\t\t\t\tfrequency: customURL.frequency,\n\t\t\t}));\n\n\t\t\tsitemap.push(...customSitemapEntries);\n\n\t\t\tconst generateXML = (sitemap) => {\n\t\t\t\tconst urlSet = sitemap\n\t\t\t\t\t.map(\n\t\t\t\t\t\t(entry) => `\n\t\t\t\t\t        <url>\n\t\t\t\t\t            <loc>${entry.url}</loc>\n\t\t\t\t\t            <priority>${entry.priority}</priority>\n\t\t\t\t\t            <changefreq>${entry.frequency}</changefreq>\n\t\t\t\t\t            ${entry.lastmod ? `<lastmod>${entry.lastmod}</lastmod>` : ''}\n\t\t\t\t\t            ${entry.thumbnail ? `<image:image><image:loc>${entry.thumbnail}</image:loc><image:title>${entry.thumbnailTitle}</image:title></image:image>` : ''}\n\t\t\t\t\t        </url>`\n\t\t\t\t\t).join('');\n\n\t\t\t\treturn `<?xml version=\"1.0\" encoding=\"UTF-8\"?><urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\">${urlSet}</urlset>`;\n\t\t\t};\n\n\t\t\treturn generateXML(sitemap);\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error fetching entries:', error);\n\t\t\tthrow new Error('Failed to fetch entries for types');\n\t\t}\n\t},\n\tasync saveAdminData(data: any) {\n\t\ttry {\n\t\t\tconst result = await strapi.db.query('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type').create({\n\t\t\t\tdata,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tmessage: 'Data saved successfully',\n\t\t\t\tsavedData: result,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error saving data:', error);\n\t\t\tthrow new Error('Failed to save data');\n\t\t}\n\t},\n\tasync getAdminData() {\n\t\ttry {\n\t\t\tconst results = await strapi.db.query('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type').findMany();\n\n\t\t\treturn {\n\t\t\t\tresults,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error fetching data:', error);\n\t\t\tthrow new Error('Failed to fetch data');\n\t\t}\n\t},\n\tasync getContentTypes() {\n\t\ttry {\n\t\t\tconst contentTypes = strapi.contentTypes;\n\n\t\t\tconst collectionTypes = Object.keys(contentTypes)\n\t\t\t\t.filter((key) => contentTypes[key].kind === 'collectionType' && key.startsWith('api::'))\n\t\t\t\t.map((key) => ({\n\t\t\t\t\tuid: key,\n\t\t\t\t\tsingularName: contentTypes[key].info.singularName,\n\t\t\t\t\tpluralName: contentTypes[key].info.pluralName,\n\t\t\t\t\tdisplayName: contentTypes[key].info.displayName,\n\t\t\t\t}));\n\n\t\t\treturn {collectionTypes};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error fetching content types:', error);\n\t\t\tthrow new Error('Failed to fetch content types');\n\t\t}\n\t},\n\tasync getLocales() {\n\t\ttry {\n\t\t\treturn await strapi.plugin('i18n').service('locales').find();\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error fetching locales:', error);\n\t\t\tthrow new Error('Failed to fetch locales');\n\t\t}\n\t},\n\tasync getAllowedFields(contentTypeSingularName) {\n\t\tconst systemFields = ['createdAt', 'updatedAt', 'publishedAt', 'createdBy', 'updatedBy', 'locale'];\n\n\t\tconst contentType = Object.values(strapi.contentTypes).find(\n\t\t\t(type) => type.info.singularName === contentTypeSingularName\n\t\t);\n\n\t\tconst fields = [];\n\n\t\tObject.entries(contentType.attributes).forEach(([fieldName, field] : [fieldName: string, field: any]) => {\n\t\t\tif (\n\t\t\t\t!systemFields.includes(fieldName) &&\n\t\t\t\tfield.type !== 'relation' &&\n\t\t\t\tfield.type !== 'component'\n\t\t\t) {\n\t\t\t\tfields.push(fieldName);\n\t\t\t} else if (\n\t\t\t\tfield.type === 'relation' &&\n\t\t\t\tfield.relation.endsWith('ToOne') &&\n\t\t\t\t!['createdBy', 'updatedBy'].includes(fieldName)\n\t\t\t) {\n\t\t\t\tfields.push(`${fieldName}.id`);\n\t\t\t} else if (\n\t\t\t\tfield.type === 'component' &&\n\t\t\t\t!field.repeatable\n\t\t\t) {\n\t\t\t\tconst component = strapi.components[field.component];\n\t\t\t\tObject.keys(component.attributes).forEach((subFieldName) => {\n\t\t\t\t\tfields.push(`${fieldName}.${subFieldName}`);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (!fields.includes('id')) {\n\t\t\tfields.push('id');\n\t\t}\n\n\t\treturn {\n\t\t\tallowedFields: fields,\n\t\t\tslug: contentType.info.pluralName,\n\t\t};\n\t},\n\tasync updateAdminData(data) {\n\t\ttry {\n\t\t\tconst result = await strapi.db.query('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type').update({\n\t\t\t\twhere: {id: data.id},\n\t\t\t\tdata: {\n\t\t\t\t\ttype: data.type,\n\t\t\t\t\tlangcode: data.langcode,\n\t\t\t\t\tpattern: data.pattern,\n\t\t\t\t\tpriority: data.priority,\n\t\t\t\t\tfrequency: data.frequency,\n\t\t\t\t\tlastModified: data.lastModified,\n\t\t\t\t\tthumbnail: data.thumbnail,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tmessage: 'Data saved successfully',\n\t\t\t\tsavedData: result,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error saving data:', error);\n\t\t\tthrow new Error('Failed to save data');\n\t\t}\n\t},\n\tasync deleteAdminData(id) {\n\t\ttry {\n\t\t\tconst result = await strapi.query('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type').delete({\n\t\t\t\twhere: {\n\t\t\t\t\tid: id,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tmessage: 'Data deleted successfully',\n\t\t\t\tdeletedData: result,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error deleting data:', error);\n\t\t\tthrow new Error('Failed to delete data');\n\t\t}\n\t},\n\tasync getOptions() {\n\t\ttry {\n\t\t\tconst results = await strapi.documents('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-option').findFirst();\n\t\t\tif (results) {\n\t\t\t\treturn {baseUrl: results.baseUrl};\n\t\t\t} else {\n\t\t\t\treturn {baseUrl: ''};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error fetching locales:', error);\n\t\t\tthrow new Error('Failed to fetch locales');\n\t\t}\n\t},\n\tasync updateOptions(data) {\n\t\ttry {\n\t\t\tconst results = await strapi.documents('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-option').findFirst();\n\t\t\tlet response = null;\n\n\t\t\tif (results) {\n\t\t\t\tresponse = await strapi.documents('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-option').update({\n\t\t\t\t\tdocumentId: results.documentId,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tbaseUrl: data.baseURL,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresponse = await strapi.db.query('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-option').create({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tbaseUrl: data.baseURL,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmessage: 'Data saved successfully',\n\t\t\t\tsavedData: response,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error saving data:', error);\n\t\t\tthrow new Error('Failed to save data');\n\t\t}\n\t},\n\tasync getCustomURLs() {\n\t\ttry {\n\t\t\tconst results = await strapi.documents('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type-single-url').findMany();\n\n\t\t\treturn {\n\t\t\t\tresults,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error fetching data:', error);\n\t\t\tthrow new Error('Failed to fetch data');\n\t\t}\n\t},\n\tasync postCustomURLs(data) {\n\t\ttry {\n\t\t\tconst result = await strapi.documents('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type-single-url').create({\n\t\t\t\tdata,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tmessage: 'Data saved successfully',\n\t\t\t\tsavedData: result,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error saving data:', error);\n\t\t\tthrow new Error('Failed to save data');\n\t\t}\n\t},\n\tasync putCustomURLs(data) {\n\t\ttry {\n\t\t\tconst result = await strapi.db.query('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type-single-url').update({\n\t\t\t\twhere: {id: data.id},\n\t\t\t\tdata: {\n\t\t\t\t\tslug: data.slug,\n\t\t\t\t\tpriority: data.priority,\n\t\t\t\t\tfrequency: data.frequency,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tmessage: 'Data saved successfully',\n\t\t\t\tsavedData: result,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error saving data:', error);\n\t\t\tthrow new Error('Failed to save data');\n\t\t}\n\t},\n\tasync deleteCustomURLs(id) {\n\t\ttry {\n\t\t\tconst result = await strapi.db.query('plugin::strapi-5-sitemap-plugin.strapi-5-sitemap-plugin-content-type-single-url').delete({\n\t\t\t\twhere: {\n\t\t\t\t\tid: id,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tmessage: 'Data deleted successfully',\n\t\t\t\tdeletedData: result,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tstrapi.log.error('Error deleting data:', error);\n\t\t\tthrow new Error('Failed to delete data');\n\t\t}\n\t}\n});\n\nexport default service;\n","import service from './service';\n\nexport default {\n  service,\n};\n","/**\n * Application methods\n */\nimport bootstrap from './bootstrap';\nimport destroy from './destroy';\nimport register from './register';\n\n/**\n * Plugin server methods\n */\nimport config from './config';\nimport contentTypes from './content-types';\nimport controllers from './controllers';\nimport middlewares from './middlewares';\nimport policies from './policies';\nimport routes from './routes';\nimport services from './services';\n\nexport default {\n  register,\n  bootstrap,\n  destroy,\n  config,\n  controllers,\n  routes,\n  services,\n  contentTypes,\n  policies,\n  middlewares,\n};\n"],"names":["schema","sitemap","contentTypes","contentType"],"mappings":"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"}